{
  "Sources": [
    /*
    {
      "Id": "SSMLog",
      "SourceType": "DirectorySource",
      "Directory": "C:\\ProgramData\\Amazon\\SSM\\Logs",
      "FileNameFilter": "*.log",
      "RecordParser": "TimeStamp", 
          //SingleLine: Each line is a record
          //TimeStamp: Each record can have multiple line. New record must start with a timestamp in the first line
          //RegEx: Each record starts with a regular expression
          //W3svc: strongly typed W3svc log. Allow filtering and projection
      "TimestampFormat": "yyyy-MM-dddd HH:mm:ss.ffff", //Optional parameter required only by the timestamp record parser
      "TimeZoneKind": "UTC", //Local or UTC
      "SkipLines": 0 //Skip a number of lines at the beginning of each file
    },
    {
      "Id": "ApplicationLog",
      "SourceType": "WindowsEventLogSource",
      "LogName": "Application"
    },
    {
      "Id": "SecurityLog",
      "SourceType": "WindowsEventLogSource",
      "LogName": "Security"
    } */
  ],
  "Sinks": [
    /*
    {
      "Id": "myCloudWatchLogsSink",
      "SinkType": "CloudWatchLogs",
      "AccessKey": "",
      "SecretKey": "",
      "Region": "us-west-2",
      "LogGroup": "{ComputerName}-Log-Group",
      "LogStream": "LogAgentTestStream"
    },
    {
      "Id": "myKinesisFirehoseSink",
      "SinkType": "KinesisFirehose",
      "AccessKey": "",
      "SecretKey": "",
      "Region": "us-west-2",
      "StreamName": "LogAgentTestStream"
    },
    {
      "Id": "myElasticSink",
      "SinkType": "KinesisFirehose",
      "AccessKey": "",
      "SecretKey": "",
      "Region": "us-west-2",
      "StreamName": "LogAgentElasticSearchTest", //"LogAgentTestJson"
      "Format": "json"
    } /*,
    {
      "Id": "myKinesisStreamSink",
      "SinkType": "KinesisStream"
      //Kinesis specific parameters
    } ,
    {
      "Id": "myCloudWatchEventSink",
      "SinkType": "CloudWatchEvent"
      //Cloud Watch Event parameters
    },
    {
      "Id": "myCloudWatchMetricsSink",
      "SinkType": "CloudWatch"
      //Cloud Watch Event parameters
    }*/
  ],
  "Pipes": [
    /*
    {
      "Id": "SSMLogToCloudWatchLogs", //Send source directly to sink
      "SourceRef": "SSMLog",
      "SinkRef": "myCloudWatchLogsSink"
    },
    {
      "Id": "ApplicationLogToCloudWatchLogs", //Send source directly to sink
      "SourceRef": "ApplicationLog",
      "SinkRef": "myCloudWatchLogsSink"
    },
    {
      "Id": "SSMLogToKinesisFirehose", //Send source directly to sink
      "SourceRef": "SSMLog",
      "SinkRef": "myKinesisFirehoseSink"
    },
    {
      "Id": "ApplicationLogToKinesisFirehose", //Send source directly to sink
      "SourceRef": "ApplicationLog",
      "SinkRef": "myKinesisFirehoseSink"
    },
    {
      "Id": "SecurityLogToKinesisFirehose", //Send source directly to sink
      "SourceRef": "SecurityLog",
      "SinkRef": "myElasticSink"
    }
    ,
    {
      "Id": "myAggregationPipe",
      "SinkRef": "myCloudWatchMetricsSink",
      "Transformation": "Select Count(*) from Window(myIISLog, 5) where sc-status='500'" //Number of errors in the past 5 minutes
    },
    {
      "Id": "myTransformationPipe",
      "SinkRef": "myCloudWatchMetricsSink",
      "Transformation": "Select Average(time-taken), max(time-taken) from Window(myIISLog, 1) where cs-uri-stem='/cart'" //Reponse time of the shopping cart page in the past minite
    }*/
  ],
  "SelfUpdate": 0 //minutes
}
